 1. create html and style.css
 2. add product attributes
 3. add link, image, name and price

Create react app
 1.npx create-react-app frontend
 2.npm start - to start te server
 3.remove unused files
 4.copy html file and css file 


Create Rating and Product Component
  1.create components/Rating.js
  2.create div.rating
  3.style div.rating, span and last span
  4.create Product components
  5.using Rating component


Create Product screen
  1.install react-router-dom - we can define multiple routes for our application
  2.Use BrowserRouter and Route for Home screen
  3.Create HomeScreen.js
  4.Add product list code there
  5.create ProductScreen.js
  6.Add new Route from product details to App.js
  7.Create 3 columns for product image, info and action

Create Node.js server(install - express, nodemon- for automatic restarting the node application )
  1.run npm init root folder - package.json file is created
  2.update package.json set type: module
  3.Add .js to imports
  4.npm install express
  5.create server.js
  6.add start command as node backend/server.js
  7.require express
  8.create route for / return backend is ready
  9.move data.js from frontend to backend
  10.create router for /api/products
  11.return products
  12.run npm start

Load products from backend
 firstly change package.json in frontend folder i.e: add proxy 
 install axios - it is a library to send ajax request to server
 fetch data from backend to frontend 
 
  1.edit HomeScreen.js
  2.define products, loading and error
  3.create useEffect
  4.define async fetchData and call init
  5.install axios
  6.get data from /api/products
  7.show them in the list
  8.create loading component
  9.create Message Box component
  10.use them in HomeScreen


12. Add redux to HomeScreen
  1.npm install redux react-redux
  2.Create store.js
     create redux store- to create redux store we need two things - 1.initialState 2.reducer
  3.initState= {products:[]}
  4.reducer = {state, action} => switch LOAD_PRODUCTS: {products: action.payload}
  5.export default createStore(reducer, initState)
      use redux store - i.e index.js
  6.Edit HomeScreen.js
  7.shopName = useSelector(state => state.products)
  8.const dispatch = useDispatch()
  9.useEffect(() => dispatch({type: LOAD_PRODUCTS, payload: data})
  10.add store to index.js

13.Add Redux to ProductScreen
   1.create product details constants, actions, reducers
   2.add reducer to store
   3.use action in ProductScreen.js
   4.add /api/product/:id to backend api
   
14.Handle Add to cart button
   1.Handle add to cart in ProductScreen.js
   2.create cartScreen.js
   



   